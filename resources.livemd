# Ash: 1 - Resources

```elixir
Application.put_env(:ash, :validate_domain_resource_inclusion?, false)
Application.put_env(:ash, :validate_domain_config_inclusion?, false)
Mix.install([{:ash, "~> 3.0.0-rc"}], consolidate_protocols: false)
```

## Create a Profile Resource

<div class="flex items-center w-full flex-start justify-between rounded-xl p-4" style="background-color: #f0f5f9; color: #61758a;">
<div class="flex">
<i class="ri-home-fill"></i>
<a class="flex ml-2" style="color: #61758a;" href="overview.livemd">Home</a>
</div>
<div class="flex">
<a class="flex mr-2" style="color: #61758a;" href="actions.livemd">Actions</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

<!-- livebook:{"break_markdown":true} -->

### In this tutorial, you will create a simple Profile resource with a name attribute

First define the `Tutorial.Profile` module as a **Resource** with the `use Ash.Resource` macro.

You also need to configure an `Ash.Domain` module that the resource will use. You can read more about this in
the section on domains. So you end up with `use Ash.Resource, domain: YourDomain`

Next, add some attributes. This is done in an **attributes** block inside the module:

<!-- livebook:{"force_markdown":true} -->

```elixir
attributes do

end
```

For your first attribute, define a primary key `uuid_primary_key :id` inside this `attributes` block.

Also define a name by adding `attribute :name, :string`

<details class="rounded-lg my-4" style="background-color: #96ef86; color: #040604;">
  <summary class="cursor-pointer font-bold p-4"></i>Show Solution</summary>
  <div class="p-4">

  ```elixir
  defmodule Tutorial.Profile do
    use Ash.Resource,
      domain: Tutorial

    attributes do
      uuid_primary_key :id
      attribute :name, :string
    end
  end
  ```

  </div>
</details>

### Enter your solution

```elixir
defmodule Tutorial.Profile do
end


defmodule Tutorial do
  use Ash.Domain

  resources do
    resource Tutorial.Profile
  end
end
```

## Changesets

If everything went well, you can now create a changeset for your newly created resource.

Changesets are used to **create** and **update** data in Ash. Note that without a data layer, you won't be able to persist creations and changes. This will be shown in a later tutorial.

```elixir
Tutorial.Profile
|> Ash.Changeset.new()
|> Ash.Changeset.change_attribute(:name, "My Name")
```

<div class="flex items-center w-full flex-start justify-between rounded-xl p-4" style="background-color: #f0f5f9; color: #61758a;">
<div class="flex">
<i class="ri-home-fill"></i>
<a class="flex ml-2" style="color: #61758a;" href="overview.livemd">Home</a>
</div>
<div class="flex">
<a class="flex mr-2" style="color: #61758a;" href="actions.livemd">Actions</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>
